{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-weather-app\\\\weather-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nconst API_KEY = \"2e863c191c07d3aeff1f0ea8a4ed6003\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault(); //Going to prevent defaults behaviour. NO REFRESH SEE CONTENT ON CONSOLE\n\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value; //Allow you to use .this indepently\n\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Titles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App; //allows it to be imported elsewhere","map":{"version":3,"sources":["D:/React-weather-app/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","console","log","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,KADwB;;AAAA,SAmBhCM,UAnBgC,GAmBnB,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF,GADwB,CACJ;;AAEpB,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C,CAJwB,CAKxB;;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,qDAAoDZ,IAAK,IAAGC,OAAQ,UAASP,OAAQ,eAD5D,CAA5B;AAGA,YAAMmB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAKI,QAAL,CAAc;AACZnB,QAAAA,WAAW,EAAEe,IAAI,CAACK,IAAL,CAAUC,IADX;AAEZnB,QAAAA,IAAI,EAAEa,IAAI,CAACO,IAFC;AAGZnB,QAAAA,OAAO,EAAEY,IAAI,CAACQ,GAAL,CAASpB,OAHN;AAIZC,QAAAA,QAAQ,EAAEW,IAAI,CAACK,IAAL,CAAUhB,QAJR;AAKZC,QAAAA,WAAW,EAAEU,IAAI,CAACS,OAAL,CAAa,CAAb,EAAgBnB,WALjB;AAMZC,QAAAA,KAAK,EAAE;AANK,OAAd;AAQD,KAvC+B;AAAA;;AAyChCmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKlB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAlD+B;;AAqDlC,eAAeV,GAAf,C,CAAoB","sourcesContent":["import React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"2e863c191c07d3aeff1f0ea8a4ed6003\";\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined,\n  };\n\n  //OLD WAY\n  // constructor(){\n  //   this.getWeather = this.getWeather.bind(this);\n  // }\n  // getWeather(){\n\n  // }\n  // OUR CALL TO THE API TO GET THE WEATHER FROM OPENWEATHER\n\n  getWeather = async (e) => {\n    e.preventDefault(); //Going to prevent defaults behaviour. NO REFRESH SEE CONTENT ON CONSOLE\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    //Allow you to use .this indepently\n    const api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n    );\n    const data = await api_call.json();\n    console.log(data);\n\n    this.setState({\n      temperature: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      humidity: data.main.humidity,\n      description: data.weather[0].description,\n      error: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Titles />\n        {/*Allow us to redirect the method to form*/}\n        <Form getWeather={this.getWeather} />\n        <Weather />\n      </div>\n    );\n  }\n}\n\nexport default App; //allows it to be imported elsewhere\n"]},"metadata":{},"sourceType":"module"}